//creatingViews
CREATE VIEW public.gossip AS
SELECT 
    gossipbar.id,
    gossipbar.title,
    gossipbar.content,
    gossipbar.likes,
    gossipbar.images,
    gossipbar.created_at,
    usernames.username
FROM 
    public.gossipbar
JOIN 
    public.usernames
ON 
    gossipbar.user_id = usernames.id;

//Message
CREATE TABLE messages (
  id uuid PRIMARY KEY DEFAULT uuid_generate_v4(),
  user_id uuid REFERENCES auth.users(id) ON DELETE CASCADE,
  username text NOT NULL,  -- Store the username directly
  message text NOT NULL,
  created_at timestamp DEFAULT now()
);


//livemessages VIEW
CREATE OR REPLACE VIEW public.livemessages AS
SELECT 
    u.username, 
    u.id as user_id,
    m.message, 
    m.created_at
FROM 
    public.messages AS m
JOIN 
    public.usernames AS u ON m.username = u.username; -- Adjust based on your foreign key
